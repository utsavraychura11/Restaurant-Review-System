//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestaurantReviewSystem_WebClient.RestaurantServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/RestaurantReviewSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNoField, value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Restaurant", Namespace="http://schemas.datacontract.org/2004/07/RestaurantReviewSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Restaurant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RestaurantIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNoField, value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoodType {
            get {
                return this.FoodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodTypeField, value) != true)) {
                    this.FoodTypeField = value;
                    this.RaisePropertyChanged("FoodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RestaurantId {
            get {
                return this.RestaurantIdField;
            }
            set {
                if ((this.RestaurantIdField.Equals(value) != true)) {
                    this.RestaurantIdField = value;
                    this.RaisePropertyChanged("RestaurantId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Review", Namespace="http://schemas.datacontract.org/2004/07/RestaurantReviewSystem.Model")]
    [System.SerializableAttribute()]
    public partial class Review : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Feedback {
            get {
                return this.FeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackField, value) != true)) {
                    this.FeedbackField = value;
                    this.RaisePropertyChanged("Feedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RestaurantServiceReference.IRestaurantService")]
    public interface IRestaurantService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/RegisterUser", ReplyAction="http://tempuri.org/IRestaurantService/RegisterUserResponse")]
        void RegisterUser(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/RegisterUser", ReplyAction="http://tempuri.org/IRestaurantService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/SignInUser", ReplyAction="http://tempuri.org/IRestaurantService/SignInUserResponse")]
        int SignInUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/SignInUser", ReplyAction="http://tempuri.org/IRestaurantService/SignInUserResponse")]
        System.Threading.Tasks.Task<int> SignInUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/UpdateUser", ReplyAction="http://tempuri.org/IRestaurantService/UpdateUserResponse")]
        bool UpdateUser(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/UpdateUser", ReplyAction="http://tempuri.org/IRestaurantService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/DeleteUser", ReplyAction="http://tempuri.org/IRestaurantService/DeleteUserResponse")]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/DeleteUser", ReplyAction="http://tempuri.org/IRestaurantService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetAllUsers", ReplyAction="http://tempuri.org/IRestaurantService/GetAllUsersResponse")]
        System.Data.DataSet GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetAllUsers", ReplyAction="http://tempuri.org/IRestaurantService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/AddRestaurant", ReplyAction="http://tempuri.org/IRestaurantService/AddRestaurantResponse")]
        void AddRestaurant(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/AddRestaurant", ReplyAction="http://tempuri.org/IRestaurantService/AddRestaurantResponse")]
        System.Threading.Tasks.Task AddRestaurantAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/DeleteRestaurant", ReplyAction="http://tempuri.org/IRestaurantService/DeleteRestaurantResponse")]
        bool DeleteRestaurant(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/DeleteRestaurant", ReplyAction="http://tempuri.org/IRestaurantService/DeleteRestaurantResponse")]
        System.Threading.Tasks.Task<bool> DeleteRestaurantAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/UpdateRestaurant", ReplyAction="http://tempuri.org/IRestaurantService/UpdateRestaurantResponse")]
        bool UpdateRestaurant(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/UpdateRestaurant", ReplyAction="http://tempuri.org/IRestaurantService/UpdateRestaurantResponse")]
        System.Threading.Tasks.Task<bool> UpdateRestaurantAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetAllRestaurants", ReplyAction="http://tempuri.org/IRestaurantService/GetAllRestaurantsResponse")]
        System.Data.DataSet GetAllRestaurants();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetAllRestaurants", ReplyAction="http://tempuri.org/IRestaurantService/GetAllRestaurantsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllRestaurantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/AddReview", ReplyAction="http://tempuri.org/IRestaurantService/AddReviewResponse")]
        void AddReview(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/AddReview", ReplyAction="http://tempuri.org/IRestaurantService/AddReviewResponse")]
        System.Threading.Tasks.Task AddReviewAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetRestaurantNames", ReplyAction="http://tempuri.org/IRestaurantService/GetRestaurantNamesResponse")]
        string[] GetRestaurantNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetRestaurantNames", ReplyAction="http://tempuri.org/IRestaurantService/GetRestaurantNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetRestaurantNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetUserId", ReplyAction="http://tempuri.org/IRestaurantService/GetUserIdResponse")]
        int GetUserId(string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetUserId", ReplyAction="http://tempuri.org/IRestaurantService/GetUserIdResponse")]
        System.Threading.Tasks.Task<int> GetUserIdAsync(string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetAllReviews", ReplyAction="http://tempuri.org/IRestaurantService/GetAllReviewsResponse")]
        System.Data.DataSet GetAllReviews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetAllReviews", ReplyAction="http://tempuri.org/IRestaurantService/GetAllReviewsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllReviewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/UpdateReview", ReplyAction="http://tempuri.org/IRestaurantService/UpdateReviewResponse")]
        bool UpdateReview(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/UpdateReview", ReplyAction="http://tempuri.org/IRestaurantService/UpdateReviewResponse")]
        System.Threading.Tasks.Task<bool> UpdateReviewAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/DeleteReview", ReplyAction="http://tempuri.org/IRestaurantService/DeleteReviewResponse")]
        bool DeleteReview(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/DeleteReview", ReplyAction="http://tempuri.org/IRestaurantService/DeleteReviewResponse")]
        System.Threading.Tasks.Task<bool> DeleteReviewAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetReviewForOneUser", ReplyAction="http://tempuri.org/IRestaurantService/GetReviewForOneUserResponse")]
        System.Data.DataSet GetReviewForOneUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestaurantService/GetReviewForOneUser", ReplyAction="http://tempuri.org/IRestaurantService/GetReviewForOneUserResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetReviewForOneUserAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestaurantServiceChannel : RestaurantReviewSystem_WebClient.RestaurantServiceReference.IRestaurantService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestaurantServiceClient : System.ServiceModel.ClientBase<RestaurantReviewSystem_WebClient.RestaurantServiceReference.IRestaurantService>, RestaurantReviewSystem_WebClient.RestaurantServiceReference.IRestaurantService {
        
        public RestaurantServiceClient() {
        }
        
        public RestaurantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestaurantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestaurantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestaurantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterUser(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user) {
            base.Channel.RegisterUser(user);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user) {
            return base.Channel.RegisterUserAsync(user);
        }
        
        public int SignInUser(string username, string password) {
            return base.Channel.SignInUser(username, password);
        }
        
        public System.Threading.Tasks.Task<int> SignInUserAsync(string username, string password) {
            return base.Channel.SignInUserAsync(username, password);
        }
        
        public bool UpdateUser(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Customer user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public System.Data.DataSet GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public void AddRestaurant(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant) {
            base.Channel.AddRestaurant(restaurant);
        }
        
        public System.Threading.Tasks.Task AddRestaurantAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant) {
            return base.Channel.AddRestaurantAsync(restaurant);
        }
        
        public bool DeleteRestaurant(int id) {
            return base.Channel.DeleteRestaurant(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRestaurantAsync(int id) {
            return base.Channel.DeleteRestaurantAsync(id);
        }
        
        public bool UpdateRestaurant(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant) {
            return base.Channel.UpdateRestaurant(restaurant);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRestaurantAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Restaurant restaurant) {
            return base.Channel.UpdateRestaurantAsync(restaurant);
        }
        
        public System.Data.DataSet GetAllRestaurants() {
            return base.Channel.GetAllRestaurants();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllRestaurantsAsync() {
            return base.Channel.GetAllRestaurantsAsync();
        }
        
        public void AddReview(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review) {
            base.Channel.AddReview(review);
        }
        
        public System.Threading.Tasks.Task AddReviewAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review) {
            return base.Channel.AddReviewAsync(review);
        }
        
        public string[] GetRestaurantNames() {
            return base.Channel.GetRestaurantNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRestaurantNamesAsync() {
            return base.Channel.GetRestaurantNamesAsync();
        }
        
        public int GetUserId(string uname) {
            return base.Channel.GetUserId(uname);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdAsync(string uname) {
            return base.Channel.GetUserIdAsync(uname);
        }
        
        public System.Data.DataSet GetAllReviews() {
            return base.Channel.GetAllReviews();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllReviewsAsync() {
            return base.Channel.GetAllReviewsAsync();
        }
        
        public bool UpdateReview(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review) {
            return base.Channel.UpdateReview(review);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateReviewAsync(RestaurantReviewSystem_WebClient.RestaurantServiceReference.Review review) {
            return base.Channel.UpdateReviewAsync(review);
        }
        
        public bool DeleteReview(int id) {
            return base.Channel.DeleteReview(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReviewAsync(int id) {
            return base.Channel.DeleteReviewAsync(id);
        }
        
        public System.Data.DataSet GetReviewForOneUser(int id) {
            return base.Channel.GetReviewForOneUser(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetReviewForOneUserAsync(int id) {
            return base.Channel.GetReviewForOneUserAsync(id);
        }
    }
}
